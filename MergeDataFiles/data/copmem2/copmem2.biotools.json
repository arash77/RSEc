{
    "accessibility": "Open access",
    "additionDate": "2024-01-02T00:53:39.413021Z",
    "biotoolsCURIE": "biotools:copmem2",
    "biotoolsID": "copmem2",
    "confidence_flag": "tool",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "wbieniec@kis.p.lodz.pl",
            "name": "Wojciech Bieniecki",
            "orcidid": "https://orcid.org/0000-0003-1708-5760",
            "typeEntity": "Person"
        }
    ],
    "description": "Robust and scalable maximum exact match finding.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Database search",
                    "uri": "http://edamontology.org/operation_2421"
                },
                {
                    "term": "Sorting",
                    "uri": "http://edamontology.org/operation_3802"
                },
                {
                    "term": "Standardisation and normalisation",
                    "uri": "http://edamontology.org/operation_3435"
                }
            ]
        }
    ],
    "homepage": "https://github.com/wbieniec/copmem2",
    "language": [
        "C",
        "C++"
    ],
    "lastUpdate": "2024-01-02T00:53:39.415583Z",
    "license": "GPL-3.0",
    "name": "copMEM2",
    "operatingSystem": [
        "Linux"
    ],
    "owner": "Pub2Tools",
    "publication": [
        {
            "doi": "10.1093/BIOINFORMATICS/BTAD313",
            "metadata": {
                "abstract": "Summary: Finding Maximum Exact Matches, i.e. matches between two strings that cannot be further extended to the left or right, is a classic string problem with applications in genome-to-genome comparisons. The existing tools rarely explicitly address the problem of MEM finding for a pair of very similar genomes, which may be computationally challenging. We present copMEM2, a multithreaded implementation of its predecessor. Together with a few optimizations, including a carefully built predecessor query data structure and sort procedure selection, and taking care for highly similar data, copMEM2 allows to compute all MEMs of minimum length 50 between the human and mouse genomes in 59 s, using 10.40 GB of RAM and 12 threads, being at least a few times faster than its main contenders. On a pair of human genomes, hg18 and hg19, the results are 324 s and 16.57 GB, respectively.",
                "authors": [
                    {
                        "name": "Bieniecki W."
                    },
                    {
                        "name": "Grabowski S."
                    }
                ],
                "date": "2023-05-01T00:00:00Z",
                "journal": "Bioinformatics",
                "title": "copMEM2: robust and scalable maximum exact match finding"
            },
            "pmcid": "PMC10209524",
            "pmid": "37171886",
            "type": [
                "Primary"
            ]
        }
    ],
    "toolType": [
        "Command-line tool"
    ],
    "topic": [
        {
            "term": "Human biology",
            "uri": "http://edamontology.org/topic_2815"
        },
        {
            "term": "Model organisms",
            "uri": "http://edamontology.org/topic_0621"
        },
        {
            "term": "Zoology",
            "uri": "http://edamontology.org/topic_3500"
        }
    ]
}

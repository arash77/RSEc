{
    "accessibility": "Open access",
    "additionDate": "2024-02-25T15:05:48.723683Z",
    "biotoolsCURIE": "biotools:biolegato",
    "biotoolsID": "biolegato",
    "confidence_flag": "tool",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "brian.fristensky@umanitoba.ca",
            "name": "Brian Fristensky",
            "typeEntity": "Person"
        }
    ],
    "description": "BioLegato is a generic graphical user interface (GUI), in essence, a program that runs other programs. Data are displayed and selected in a canvas. A program is chosen from dropdown menus, parameters are set in a pop up menu, and the program launched by issuing a shell command to the system. Thus, any program, from a simple shell script to a complex analytical pipeline, can be launched from BioLegato.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Data retrieval",
                    "uri": "http://edamontology.org/operation_2422"
                },
                {
                    "term": "Transcriptome assembly",
                    "uri": "http://edamontology.org/operation_3258"
                }
            ]
        }
    ],
    "homepage": "https://github.com/bfristensky/BioLegato/wiki",
    "language": [
        "Java"
    ],
    "lastUpdate": "2024-02-25T15:05:48.726827Z",
    "license": "CC-BY-NC-4.0",
    "name": "BioLegato",
    "owner": "Pub2Tools",
    "publication": [
        {
            "doi": "10.1186/S12859-023-05436-4",
            "metadata": {
                "abstract": "Background: Biologists are faced with an ever-changing array of complex software tools with steep learning curves, often run on High Performance Computing platforms. To resolve the tradeoff between analytical sophistication and usability, we have designed BioLegato, a programmable graphical user interface (GUI) for running external programs. Results: BioLegato can run any program or pipeline that can be launched as a command. BioLegato reads specifications for each tool from files written in PCD, a simple language for specifying GUI components that set parameters for calling external programs. Thus, adding new tools to BioLegato can be done without changing the BioLegato Java code itself. The process is as simple as copying an existing PCD file and modifying it for the new program, which is more like filling in a form than writing code. PCD thus facilitates rapid development of new applications using existing programs as building blocks, and getting them to work together seamlessly. Conclusion: BioLegato applies Object-Oriented concepts to the user experience by organizing applications based on discrete data types and the methods relevant to that data. PCD makes it easier for BioLegato applications to evolve with the succession of analytical tools for bioinformatics. BioLegato is applicable not only in biology, but in almost any field in which disparate software tools need to work as an integrated system.",
                "authors": [
                    {
                        "name": "Alvare G."
                    },
                    {
                        "name": "Fristensky B."
                    },
                    {
                        "name": "Roche-Lima A."
                    }
                ],
                "date": "2023-12-01T00:00:00Z",
                "journal": "BMC Bioinformatics",
                "title": "BioLegato: a programmable, object-oriented graphic user interface"
            },
            "pmcid": "PMC10441721",
            "pmid": "37605108"
        }
    ],
    "toolType": [
        "Desktop application"
    ],
    "topic": [
        {
            "term": "Computer science",
            "uri": "http://edamontology.org/topic_3316"
        },
        {
            "term": "Sequencing",
            "uri": "http://edamontology.org/topic_3168"
        },
        {
            "term": "Transcriptomics",
            "uri": "http://edamontology.org/topic_3308"
        },
        {
            "term": "Workflows",
            "uri": "http://edamontology.org/topic_0769"
        }
    ]
}

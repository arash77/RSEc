{
    "accessibility": "Open access",
    "additionDate": "2024-01-02T16:54:44.793447Z",
    "biotoolsCURIE": "biotools:mmodel",
    "biotoolsID": "mmodel",
    "confidence_flag": "tool",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "hs859@cornell.edu",
            "name": "Peter Sun",
            "orcidid": "https://orcid.org/0000-0002-5241-100X",
            "typeEntity": "Person"
        },
        {
            "name": "John A. Marohn",
            "orcidid": "https://orcid.org/0000-0003-2364-0847"
        }
    ],
    "description": "A workflow framework to accelerate the development of experimental simulations.",
    "documentation": [
        {
            "type": [
                "User manual"
            ],
            "url": "https://marohn-group.github.io/mmodel-docs/"
        }
    ],
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Essential dynamics",
                    "uri": "http://edamontology.org/operation_3891"
                },
                {
                    "term": "Loop modelling",
                    "uri": "http://edamontology.org/operation_0481"
                },
                {
                    "term": "Visualisation",
                    "uri": "http://edamontology.org/operation_0337"
                }
            ]
        }
    ],
    "homepage": "http://github.com/marohn-group/mmodel",
    "language": [
        "Python"
    ],
    "lastUpdate": "2024-01-02T16:54:44.796169Z",
    "name": "mmodel",
    "owner": "Pub2Tools",
    "publication": [
        {
            "doi": "10.1063/5.0155617",
            "metadata": {
                "abstract": "Simulation has become an essential component of designing and developing scientific experiments. The conventional procedural approach to coding simulations of complex experiments is often error-prone, hard to interpret, and inflexible, making it hard to incorporate changes such as algorithm updates, experimental protocol modifications, and looping over experimental parameters. We present mmodel, a Python framework designed to accelerate the writing of experimental simulation packages. mmodel uses a graph-theory approach to represent the experiment steps and can rewrite its own code to implement modifications, such as adding a loop to vary simulation parameters systematically. The framework aims to avoid duplication of effort, increase code readability and testability, and decrease development time.",
                "authors": [
                    {
                        "name": "Marohn J.A."
                    },
                    {
                        "name": "Sun P."
                    }
                ],
                "date": "2023-07-28T00:00:00Z",
                "journal": "Journal of Chemical Physics",
                "title": "mmodel: A workflow framework to accelerate the development of experimental simulations"
            },
            "pmcid": "PMC10375467",
            "pmid": "37490627"
        }
    ],
    "toolType": [
        "Workflow"
    ],
    "topic": [
        {
            "term": "Imaging",
            "uri": "http://edamontology.org/topic_3382"
        },
        {
            "term": "Mathematics",
            "uri": "http://edamontology.org/topic_3315"
        },
        {
            "term": "Proteomics experiment",
            "uri": "http://edamontology.org/topic_3520"
        },
        {
            "term": "Simulation experiment",
            "uri": "http://edamontology.org/topic_3524"
        },
        {
            "term": "Workflows",
            "uri": "http://edamontology.org/topic_0769"
        }
    ]
}

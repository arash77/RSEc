{
    "accessibility": "Open access",
    "additionDate": "2024-03-08T09:37:00.265738Z",
    "biotoolsCURIE": "biotools:neurodevsim",
    "biotoolsID": "neurodevsim",
    "confidence_flag": "tool",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "erik@oist.jp",
            "name": "Erik De Schutter",
            "typeEntity": "Person"
        }
    ],
    "description": "NeuroDevSim is a Neural Development Simulator for Linux of MacOS environments. It is a parallel and phenomenological computational framework to grow large numbers of neuronal morphologies (and resultant microcircuits) simultaneously according to growth-rules expressed in terms of interactions with the environment and internal variables:.",
    "documentation": [
        {
            "type": [
                "User manual"
            ],
            "url": "https://cns-oist.github.io/NeuroDevSim/index.html"
        }
    ],
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Deposition",
                    "uri": "http://edamontology.org/operation_3431"
                },
                {
                    "term": "Modelling and simulation",
                    "uri": "http://edamontology.org/operation_2426"
                },
                {
                    "term": "Neurite measurement",
                    "uri": "http://edamontology.org/operation_3450"
                }
            ]
        }
    ],
    "homepage": "https://github.com/CNS-OIST/NeuroDevSim",
    "language": [
        "Python"
    ],
    "lastUpdate": "2024-03-08T09:37:00.268356Z",
    "license": "GPL-3.0",
    "name": "NeuroDevSim",
    "operatingSystem": [
        "Linux",
        "Mac"
    ],
    "owner": "Pub2Tools",
    "publication": [
        {
            "doi": "10.3389/FNINF.2023.1212384",
            "metadata": {
                "abstract": "The Neural Development Simulator, NeuroDevSim, is a Python module that simulates the most important aspects of brain development: morphological growth, migration, and pruning. It uses an agent-based modeling approach inherited from the NeuroMaC software. Each cycle has agents called fronts execute model-specific code. In the case of a growing dendritic or axonal front, this will be a choice between extension, branching, or growth termination. Somatic fronts can migrate to new positions and any front can be retracted to prune parts of neurons. Collision detection prevents new or migrating fronts from overlapping with existing ones. NeuroDevSim is a multi-core program that uses an innovative shared memory approach to achieve parallel processing without messaging. We demonstrate linear strong parallel scaling up to 96 cores for large models and have run these successfully on 128 cores. Most of the shared memory parallelism is achieved without memory locking. Instead, cores have only write privileges to private sections of arrays, while being able to read the entire shared array. Memory conflicts are avoided by a coding rule that allows only active fronts to use methods that need writing access. The exception is collision detection, which is needed to avoid the growth of physically overlapping structures. For collision detection, a memory-locking mechanism was necessary to control access to grid points that register the location of nearby fronts. A custom approach using a serialized lock broker was able to manage both read and write locking. NeuroDevSim allows easy modeling of most aspects of neural development for models simulating a few complex or thousands of simple neurons or a mixture of both. Code available at: https://github.com/CNS-OIST/NeuroDevSim.",
                "authors": [
                    {
                        "name": "De Schutter E."
                    }
                ],
                "citationCount": 1,
                "date": "2023-01-01T00:00:00Z",
                "journal": "Frontiers in Neuroinformatics",
                "title": "Efficient simulation of neural development using shared memory parallelization"
            },
            "pmcid": "PMC10400717",
            "pmid": "37547492"
        }
    ],
    "toolType": [
        "Library"
    ],
    "topic": [
        {
            "term": "Machine learning",
            "uri": "http://edamontology.org/topic_3474"
        },
        {
            "term": "Neurology",
            "uri": "http://edamontology.org/topic_3334"
        },
        {
            "term": "Transcription factors and regulatory sites",
            "uri": "http://edamontology.org/topic_0749"
        }
    ]
}

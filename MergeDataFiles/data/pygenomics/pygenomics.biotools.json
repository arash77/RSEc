{
    "accessibility": "Open access",
    "additionDate": "2023-12-20T21:57:25.985715Z",
    "biotoolsCURIE": "biotools:pygenomics",
    "biotoolsID": "pygenomics",
    "confidence_flag": "tool",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "a.samsonova@spbu.ru",
            "name": "Anastasia Samsonova",
            "typeEntity": "Person"
        }
    ],
    "description": "Manipulating genomic intervals and data files in Python.",
    "editPermission": {
        "type": "public"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Variant calling",
                    "uri": "http://edamontology.org/operation_3227"
                }
            ]
        }
    ],
    "homepage": "https://gitlab.com/gtamazian/pygenomics",
    "language": [
        "Python"
    ],
    "lastUpdate": "2023-12-20T21:57:25.990056Z",
    "license": "MIT",
    "name": "pygenomics",
    "operatingSystem": [
        "Linux",
        "Mac",
        "Windows"
    ],
    "owner": "Pub2Tools",
    "publication": [
        {
            "doi": "10.1093/BIOINFORMATICS/BTAD346",
            "metadata": {
                "abstract": "Summary: We present pygenomics, a Python package for working with genomic intervals and bioinformatic data files. The package implements interval operations, provides both API and CLI, and supports reading and writing data in widely used bioinformatic formats, including BAM, BED, GFF3, and VCF. The source code of pygenomics is provided with in-source documentation and type annotations and adheres to the functional programming paradigm. These features facilitate seamless integration of pygenomics routines into scripts and pipelines. The package is implemented in pure Python using its standard library only and contains the property-based testing framework. Comparison of pygenomics with other Python bioinformatic packages with relation to features and performance is presented. The performance comparison covers operations with genomic intervals, read alignments, and genomic variants and demonstrates that pygenomics is suitable for computationally effective analysis.",
                "authors": [
                    {
                        "name": "Cherkasov N."
                    },
                    {
                        "name": "Kanapin A."
                    },
                    {
                        "name": "Samsonova A."
                    },
                    {
                        "name": "Tamazian G."
                    }
                ],
                "date": "2023-06-01T00:00:00Z",
                "journal": "Bioinformatics",
                "title": "Pygenomics: manipulating genomic intervals and data files in Python"
            },
            "pmcid": "PMC10246576",
            "pmid": "37228014",
            "type": [
                "Primary"
            ]
        }
    ],
    "toolType": [
        "Command-line tool"
    ],
    "topic": [
        {
            "term": "Bioinformatics",
            "uri": "http://edamontology.org/topic_0091"
        },
        {
            "term": "Genomics",
            "uri": "http://edamontology.org/topic_0622"
        },
        {
            "term": "Workflows",
            "uri": "http://edamontology.org/topic_0769"
        }
    ]
}

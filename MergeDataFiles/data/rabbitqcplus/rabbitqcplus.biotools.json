{
    "additionDate": "2024-01-29T12:02:13.833523Z",
    "biotoolsCURIE": "biotools:rabbitqcplus",
    "biotoolsID": "rabbitqcplus",
    "confidence_flag": "tool",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "zekun.yin@sdu.edu.cn",
            "name": "Zekun Yin"
        }
    ],
    "description": "More efficient and versatile quality control for sequencing data.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Enrichment analysis",
                    "uri": "http://edamontology.org/operation_3501"
                },
                {
                    "term": "Filtering",
                    "uri": "http://edamontology.org/operation_3695"
                },
                {
                    "term": "Sequencing quality control",
                    "uri": "http://edamontology.org/operation_3218"
                }
            ]
        }
    ],
    "homepage": "https://github.com/RabbitBio/RabbitQCPlus",
    "language": [
        "C++"
    ],
    "lastUpdate": "2024-01-29T12:02:13.836145Z",
    "license": "MIT",
    "name": "RabbitQCPlus",
    "operatingSystem": [
        "Linux"
    ],
    "owner": "Pub2Tools",
    "publication": [
        {
            "doi": "10.1016/J.YMETH.2023.06.007",
            "metadata": {
                "abstract": "Assessing the quality of sequencing data plays a crucial role in downstream data analysis. However, existing tools often achieve sub-optimal efficiency, especially when dealing with compressed files or performing complicated quality control operations such as over-representation analysis and error correction. We present RabbitQCPlus, an ultra-efficient quality control tool for modern multi-core systems. RabbitQCPlus uses vectorization, memory copy reduction, parallel (de)compression, and optimized data structures to achieve substantial performance gains. It is 1.1 to 5.4 times faster when performing basic quality control operations compared to state-of-the-art applications yet requires fewer compute resources. Moreover, RabbitQCPlus is at least 4 times faster than other applications when processing gzip-compressed FASTQ files and 1.3 times faster with the error correction module turned on. Furthermore, it takes less than 4 minutes to process 280 GB of plain FASTQ sequencing data, while other applications take at least 22 minutes on a 48-core server when enabling the per-read over-representation analysis. C++ sources are available at https://github.com/RabbitBio/RabbitQCPlus.",
                "authors": [
                    {
                        "name": "Kallenborn F."
                    },
                    {
                        "name": "Liu W."
                    },
                    {
                        "name": "Muller A."
                    },
                    {
                        "name": "Niu B."
                    },
                    {
                        "name": "Schmidt B."
                    },
                    {
                        "name": "Wang M."
                    },
                    {
                        "name": "Wei Y."
                    },
                    {
                        "name": "Wichmann A."
                    },
                    {
                        "name": "Yan L."
                    },
                    {
                        "name": "Yin Z."
                    },
                    {
                        "name": "Zhang H."
                    },
                    {
                        "name": "Zhao Z."
                    }
                ],
                "date": "2023-08-01T00:00:00Z",
                "journal": "Methods",
                "title": "RabbitQCPlus 2.0: More efficient and versatile quality control for sequencing data"
            },
            "pmid": "37330158"
        }
    ],
    "toolType": [
        "Command-line tool"
    ],
    "topic": [
        {
            "term": "Computer science",
            "uri": "http://edamontology.org/topic_3316"
        }
    ]
}
